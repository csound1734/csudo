/****************************************************************************
*****************************************************************************
UDO DEFINITIONS IN tables/create:
*****************************************************************************
TbScala    : ifno TbScala Sfil [, ibasefreq [, ibasekey [, ifn]]] 
TbSinc     : iFt TbSinc iStart, iEnd [,iSize [,iFtNo]]
*****************************************************************************
****************************************************************************/

/****************************************************************************
ifno TbScala Sfil [, ibasefreq [, ibasekey [, ifn]]] 
Creates a table by reading a scala scale file (.scl)

Scale values are converted to decimal format useable by the cpstun(i) opcode.
Written by Thorin Kerr

ifno - Return number of generated table.
Sfil - scale file name (or path) in double quotes
ibasefreq - The base frequency of the scale in cycles per second (default = Csounds A4 value)
ibasekey - The integer index of the scale to which to assign basefreq unmodified (default = 69)
ifn - destination table number of the table. (default 0: generated by Csound)

The scala software, file format, and scale archive is available from  http://www.huygens-fokker.org/scala/
****************************************************************************/
/****************************************************************************
iFt TbSinc iStart, iEnd [,iSize [,iFtNo]]
Creates a table with a sinc function.

Creates a table containing the values of a sinc function f(x)/x from x between start and end, with a table size of 4096 as default. Returns the table number which is by default generated by Csound, but can also be assigned by an input.
written by joachim heintz

iStart - lowest x value for sinc function
iEnd - highest x value for sinc function
iSize - size of the function table generated (default 4096 points)
iFtNo - number of the generated table (default 0: generated by Csound)
iFt - the number of the table 
****************************************************************************/

opcode TbScala, i, Sjjo
 ScalaFile, ibasefreq, ibasekey, ifn xin
 if filevalid(ScalaFile) == 0 then
  prints "TBScala didn't work. File not found\n"
  idummy_ = 0
 else
  iline init 0
  inoncommentline init 0
  inumgrades init 0
  ipitwrites init 0
  ibasefreq = (ibasefreq == -1 ? A4 : ibasefreq)
  ibasekey = (ibasekey == -1 ? 69 : ibasekey)
  while iline != -1 do
   Sline, iline readfi ScalaFile
   istrlen strlen Sline
   if strchar:i(Sline) == 33 then
    ;;ignore commentlines
   elseif inoncommentline == 0 then
    ;;; first non comment line is description
    inoncommentline += 1
   elseif inoncommentline == 1 then
    ;;; second non comment line is numnotes
    inumgrades strtod strsub(Sline, 0, istrlen - 1)
    ipitstore[] init inumgrades
    inoncommentline += 1
   else
    ;; cents or ratio's from here
    ipos init 0
    istartslice init -1
    iendslice init -1
    icentformat init 0
    while ipos < istrlen do
     ichr strchar Sline, ipos
     if (ichr >= 45 && ichr < 58) then
      if (istartslice == -1) then
       istartslice = ipos
      endif
      if (ichr == 46) then
       icentformat = 1
      endif
     elseif (istartslice >= 0 && iendslice == -1) then
      iendslice = ipos
      igoto breakout
     endif
     ipos += 1
    od
    breakout:
    if (istartslice != -1) then
     Ssegment strsub Sline, istartslice, iendslice
     if (icentformat == 1) then
      ipitval strtod Ssegment
     else
      idiv strindex Ssegment, "/"
      Snumer strsub Ssegment, 0, idiv
      Sdenom strsub Ssegment, idiv+1
      inumer strtod Snumer
      idenom = (idiv == -1 ? 1 : strtod:i(Sdenom)) 
      ipitval = inumer/idenom
     endif            
     ipitval = (icentformat == 1 ? (2 ^ (ipitval/1200)) : ipitval)
     ipitstore[ipitwrites] = ipitval
     ipitwrites += 1
    endif
   endif
  od
  idummy_ ftgen ifn, 0, -(ipitwrites + 5), -2, inumgrades, ipitval, ibasefreq, ibasekey, 1
  iarrstep init 0
  while iarrstep < inumgrades do
   tablew ipitstore[iarrstep], iarrstep + 5, idummy_
   iarrstep += 1
  od
 endif
 xout idummy_
endop 

opcode TbSinc, i, iioo
 iStart, iEnd, iSize, iFtNo xin
 iFt ftgen 0, 0, -iSize, 2, 0
 iRange = iEnd - iStart
 iCnt = 0
 while iCnt < iSize do
  iX = iRange/(iSize-1) * iCnt + iStart
  iY = (iX == 0 ? 1 : sin(iX) / iX)
  tablew iY, iCnt, iFt
  iCnt += 1
 od
 xout iFt
endop


